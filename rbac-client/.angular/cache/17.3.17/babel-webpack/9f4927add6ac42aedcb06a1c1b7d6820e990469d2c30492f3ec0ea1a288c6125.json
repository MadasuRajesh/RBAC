{"ast":null,"code":"import { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@auth0/angular-jwt\";\nimport * as i3 from \"@angular/router\";\nexport let AuthService = /*#__PURE__*/(() => {\n  class AuthService {\n    constructor(http, jwtHelper, router) {\n      this.http = http;\n      this.jwtHelper = jwtHelper;\n      this.router = router;\n      this.apiUrl = `${environment.apiUrl}/api/auth`;\n      this.tokenKey = 'access_token';\n    }\n    login(data) {\n      return this.http.post(`${this.apiUrl}/login`, data);\n    }\n    register(data) {\n      return this.http.post(`${this.apiUrl}/register`, data);\n    }\n    logout() {\n      localStorage.removeItem(this.tokenKey);\n      this.router.navigate(['/login']);\n    }\n    saveToken(token) {\n      localStorage.setItem(this.tokenKey, token);\n    }\n    getToken() {\n      return localStorage.getItem(this.tokenKey);\n    }\n    isLoggedIn() {\n      const token = this.getToken();\n      return token !== null && !this.jwtHelper.isTokenExpired(token);\n    }\n    getUserRole() {\n      const token = this.getToken();\n      if (!token) return;\n      const decodedToken = this.jwtHelper.decodeToken(token);\n      const roles = decodedToken['role'];\n      return Array.isArray(roles) ? roles[0] : roles;\n    }\n    getUsername() {\n      const token = this.getToken();\n      if (!token) return '';\n      const decodedToken = this.jwtHelper.decodeToken(token);\n      return decodedToken['unique_name'] || decodedToken['name'];\n    }\n    static {\n      this.ɵfac = function AuthService_Factory(t) {\n        return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.JwtHelperService), i0.ɵɵinject(i3.Router));\n      };\n    }\n    static {\n      this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n        token: AuthService,\n        factory: AuthService.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return AuthService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}