{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./auth.service\";\nexport let JwtInterceptor = /*#__PURE__*/(() => {\n  class JwtInterceptor {\n    constructor(auth) {\n      this.auth = auth;\n    }\n    intercept(req, next) {\n      const token = this.auth.getToken();\n      if (token) {\n        req = req.clone({\n          setHeaders: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n      }\n      return next.handle(req);\n    }\n    static {\n      this.ɵfac = function JwtInterceptor_Factory(t) {\n        return new (t || JwtInterceptor)(i0.ɵɵinject(i1.AuthService));\n      };\n    }\n    static {\n      this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n        token: JwtInterceptor,\n        factory: JwtInterceptor.ɵfac\n      });\n    }\n  }\n  return JwtInterceptor;\n})();","map":{"version":3,"names":["JwtInterceptor","constructor","auth","intercept","req","next","token","getToken","clone","setHeaders","Authorization","handle","i0","ɵɵinject","i1","AuthService","factory","ɵfac"],"sources":["D:\\my projects\\RBAC\\rbac-client\\src\\app\\core\\jwt-interceptor.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpInterceptor, HttpHandler, HttpRequest } from '@angular/common/http';\r\nimport { AuthService } from './auth.service';\r\n\r\n@Injectable()\r\nexport class JwtInterceptor implements HttpInterceptor {\r\n  constructor(private auth: AuthService) {}\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\r\n    const token = this.auth.getToken();\r\n    if (token) {\r\n      req = req.clone({\r\n        setHeaders: { Authorization: `Bearer ${token}` }\r\n      });\r\n    }\r\n    return next.handle(req);\r\n  }\r\n}\r\n"],"mappings":";;AAKA,WAAaA,cAAc;EAArB,MAAOA,cAAc;IACzBC,YAAoBC,IAAiB;MAAjB,KAAAA,IAAI,GAAJA,IAAI;IAAgB;IAExCC,SAASA,CAACC,GAAqB,EAAEC,IAAiB;MAChD,MAAMC,KAAK,GAAG,IAAI,CAACJ,IAAI,CAACK,QAAQ,EAAE;MAClC,IAAID,KAAK,EAAE;QACTF,GAAG,GAAGA,GAAG,CAACI,KAAK,CAAC;UACdC,UAAU,EAAE;YAAEC,aAAa,EAAE,UAAUJ,KAAK;UAAE;SAC/C,CAAC;MACJ;MACA,OAAOD,IAAI,CAACM,MAAM,CAACP,GAAG,CAAC;IACzB;;;yBAXWJ,cAAc,EAAAY,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,WAAA;MAAA;IAAA;;;eAAdf,cAAc;QAAAgB,OAAA,EAAdhB,cAAc,CAAAiB;MAAA;IAAA;;SAAdjB,cAAc;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}