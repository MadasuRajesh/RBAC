{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../core/auth.service\";\nimport * as i2 from \"@angular/router\";\nexport let AuthGuard = /*#__PURE__*/(() => {\n  class AuthGuard {\n    constructor(auth, router) {\n      this.auth = auth;\n      this.router = router;\n    }\n    canActivate(route) {\n      const expectedRoles = route.data['roles'];\n      const userRole = this.auth.getUserRole();\n      if (!this.auth.isLoggedIn() || !expectedRoles.includes(userRole)) {\n        this.router.navigate(['/auth/login']);\n        return false;\n      }\n      return true;\n    }\n    static {\n      this.ɵfac = function AuthGuard_Factory(t) {\n        return new (t || AuthGuard)(i0.ɵɵinject(i1.AuthService), i0.ɵɵinject(i2.Router));\n      };\n    }\n    static {\n      this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n        token: AuthGuard,\n        factory: AuthGuard.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return AuthGuard;\n})();","map":{"version":3,"names":["AuthGuard","constructor","auth","router","canActivate","route","expectedRoles","data","userRole","getUserRole","isLoggedIn","includes","navigate","i0","ɵɵinject","i1","AuthService","i2","Router","factory","ɵfac","providedIn"],"sources":["D:\\my projects\\RBAC\\rbac-client\\src\\app\\auth\\auth.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, Router } from '@angular/router';\r\nimport { AuthService } from '../core/auth.service';\r\nimport { Role } from '../shared/enums';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(private auth: AuthService, private router: Router) {}\r\n\r\n  canActivate(route: ActivatedRouteSnapshot): boolean {\r\n    const expectedRoles = route.data['roles'] as Role[];\r\n    const userRole = this.auth.getUserRole();\r\n\r\n    if (!this.auth.isLoggedIn() || !expectedRoles.includes(userRole)) {\r\n      this.router.navigate(['/auth/login']);\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n}\r\n"],"mappings":";;;AAQA,WAAaA,SAAS;EAAhB,MAAOA,SAAS;IACpBC,YAAoBC,IAAiB,EAAUC,MAAc;MAAzC,KAAAD,IAAI,GAAJA,IAAI;MAAuB,KAAAC,MAAM,GAANA,MAAM;IAAW;IAEhEC,WAAWA,CAACC,KAA6B;MACvC,MAAMC,aAAa,GAAGD,KAAK,CAACE,IAAI,CAAC,OAAO,CAAW;MACnD,MAAMC,QAAQ,GAAG,IAAI,CAACN,IAAI,CAACO,WAAW,EAAE;MAExC,IAAI,CAAC,IAAI,CAACP,IAAI,CAACQ,UAAU,EAAE,IAAI,CAACJ,aAAa,CAACK,QAAQ,CAACH,QAAQ,CAAC,EAAE;QAChE,IAAI,CAACL,MAAM,CAACS,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC;QACrC,OAAO,KAAK;MACd;MAEA,OAAO,IAAI;IACb;;;yBAbWZ,SAAS,EAAAa,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,MAAA;MAAA;IAAA;;;eAATlB,SAAS;QAAAmB,OAAA,EAATnB,SAAS,CAAAoB,IAAA;QAAAC,UAAA,EAFR;MAAM;IAAA;;SAEPrB,SAAS;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}