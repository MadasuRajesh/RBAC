{"ast":null,"code":"import { environment } from 'src/environments/environment';\nimport { tap } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@auth0/angular-jwt\";\nimport * as i3 from \"@angular/router\";\nexport class AuthService {\n  constructor(http, jwtHelper, router) {\n    this.http = http;\n    this.jwtHelper = jwtHelper;\n    this.router = router;\n    this.apiUrl = `${environment.apiUrl}/api/auth`;\n    this.tokenKey = 'access_token';\n  }\n  login(credentials) {\n    return this.http.post(`${this.apiUrl}/login`, credentials).pipe(tap(res => {\n      localStorage.setItem('tokenKey', res.token);\n    }));\n  }\n  register(data) {\n    return this.http.post(`${this.apiUrl}/register`, data);\n  }\n  logout() {\n    localStorage.removeItem(this.tokenKey);\n    this.router.navigate(['/login']);\n  }\n  saveToken(token) {\n    localStorage.setItem(this.tokenKey, token);\n  }\n  getToken() {\n    return localStorage.getItem(this.tokenKey);\n  }\n  isLoggedIn() {\n    const token = this.getToken();\n    return token !== null && !this.jwtHelper.isTokenExpired(token);\n  }\n  getUserRole() {\n    const token = this.getToken();\n    if (!token) return;\n    const decodedToken = this.jwtHelper.decodeToken(token);\n    const roles = decodedToken['role'];\n    return Array.isArray(roles) ? roles[0] : roles;\n  }\n  getUsername() {\n    const token = this.getToken();\n    if (!token) return '';\n    const decodedToken = this.jwtHelper.decodeToken(token);\n    return decodedToken['unique_name'] || decodedToken['name'];\n  }\n  static {\n    this.ɵfac = function AuthService_Factory(t) {\n      return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.JwtHelperService), i0.ɵɵinject(i3.Router));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AuthService,\n      factory: AuthService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["environment","tap","AuthService","constructor","http","jwtHelper","router","apiUrl","tokenKey","login","credentials","post","pipe","res","localStorage","setItem","token","register","data","logout","removeItem","navigate","saveToken","getToken","getItem","isLoggedIn","isTokenExpired","getUserRole","decodedToken","decodeToken","roles","Array","isArray","getUsername","i0","ɵɵinject","i1","HttpClient","i2","JwtHelperService","i3","Router","factory","ɵfac","providedIn"],"sources":["D:\\my projects\\RBAC\\rbac-client\\src\\app\\core\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\nimport { Router } from '@angular/router';\r\nimport { LoginDto } from '../shared/models/login.model';\r\nimport { RegisterDto } from '../shared/models/register.model';\r\nimport { Role } from '../shared/enums';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Observable, tap } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n  private apiUrl = `${environment.apiUrl}/api/auth`; \r\n  private tokenKey = 'access_token';\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private jwtHelper: JwtHelperService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  login(credentials: { username: string; password: string }): Observable<any> {\r\n    return this.http.post(`${this.apiUrl}/login`, credentials).pipe(\r\n      tap((res: any) => {\r\n        localStorage.setItem('tokenKey', res.token);\r\n      })\r\n    );\r\n  }\r\n\r\n  register(data: RegisterDto) {\r\n    return this.http.post(`${this.apiUrl}/register`, data);\r\n  }\r\n\r\n  logout() {\r\n    localStorage.removeItem(this.tokenKey);\r\n    this.router.navigate(['/login']);\r\n  }\r\n\r\n  saveToken(token: string) {\r\n    localStorage.setItem(this.tokenKey, token);\r\n  }\r\n\r\n  getToken(): string | null {\r\n    return localStorage.getItem(this.tokenKey);\r\n  }\r\n\r\n  isLoggedIn(): boolean {\r\n    const token = this.getToken();\r\n    return token !== null && !this.jwtHelper.isTokenExpired(token);\r\n  }\r\n\r\n  getUserRole(): Role {\r\n    const token = this.getToken();\r\n    if (!token) return ;\r\n    const decodedToken = this.jwtHelper.decodeToken(token);\r\n    const roles = decodedToken['role'];\r\n    return Array.isArray(roles) ? roles[0] : roles;\r\n  }\r\n\r\n  getUsername(): string {\r\n    const token = this.getToken();\r\n    if (!token) return '';\r\n    const decodedToken = this.jwtHelper.decodeToken(token);\r\n    return decodedToken['unique_name'] || decodedToken['name'];\r\n  }\r\n}\r\n"],"mappings":"AAOA,SAASA,WAAW,QAAQ,8BAA8B;AAC1D,SAAqBC,GAAG,QAAQ,MAAM;;;;;AAKtC,OAAM,MAAOC,WAAW;EAItBC,YACUC,IAAgB,EAChBC,SAA2B,EAC3BC,MAAc;IAFd,KAAAF,IAAI,GAAJA,IAAI;IACJ,KAAAC,SAAS,GAATA,SAAS;IACT,KAAAC,MAAM,GAANA,MAAM;IANR,KAAAC,MAAM,GAAG,GAAGP,WAAW,CAACO,MAAM,WAAW;IACzC,KAAAC,QAAQ,GAAG,cAAc;EAM9B;EAEHC,KAAKA,CAACC,WAAmD;IACvD,OAAO,IAAI,CAACN,IAAI,CAACO,IAAI,CAAC,GAAG,IAAI,CAACJ,MAAM,QAAQ,EAAEG,WAAW,CAAC,CAACE,IAAI,CAC7DX,GAAG,CAAEY,GAAQ,IAAI;MACfC,YAAY,CAACC,OAAO,CAAC,UAAU,EAAEF,GAAG,CAACG,KAAK,CAAC;IAC7C,CAAC,CAAC,CACH;EACH;EAEAC,QAAQA,CAACC,IAAiB;IACxB,OAAO,IAAI,CAACd,IAAI,CAACO,IAAI,CAAC,GAAG,IAAI,CAACJ,MAAM,WAAW,EAAEW,IAAI,CAAC;EACxD;EAEAC,MAAMA,CAAA;IACJL,YAAY,CAACM,UAAU,CAAC,IAAI,CAACZ,QAAQ,CAAC;IACtC,IAAI,CAACF,MAAM,CAACe,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;EAClC;EAEAC,SAASA,CAACN,KAAa;IACrBF,YAAY,CAACC,OAAO,CAAC,IAAI,CAACP,QAAQ,EAAEQ,KAAK,CAAC;EAC5C;EAEAO,QAAQA,CAAA;IACN,OAAOT,YAAY,CAACU,OAAO,CAAC,IAAI,CAAChB,QAAQ,CAAC;EAC5C;EAEAiB,UAAUA,CAAA;IACR,MAAMT,KAAK,GAAG,IAAI,CAACO,QAAQ,EAAE;IAC7B,OAAOP,KAAK,KAAK,IAAI,IAAI,CAAC,IAAI,CAACX,SAAS,CAACqB,cAAc,CAACV,KAAK,CAAC;EAChE;EAEAW,WAAWA,CAAA;IACT,MAAMX,KAAK,GAAG,IAAI,CAACO,QAAQ,EAAE;IAC7B,IAAI,CAACP,KAAK,EAAE;IACZ,MAAMY,YAAY,GAAG,IAAI,CAACvB,SAAS,CAACwB,WAAW,CAACb,KAAK,CAAC;IACtD,MAAMc,KAAK,GAAGF,YAAY,CAAC,MAAM,CAAC;IAClC,OAAOG,KAAK,CAACC,OAAO,CAACF,KAAK,CAAC,GAAGA,KAAK,CAAC,CAAC,CAAC,GAAGA,KAAK;EAChD;EAEAG,WAAWA,CAAA;IACT,MAAMjB,KAAK,GAAG,IAAI,CAACO,QAAQ,EAAE;IAC7B,IAAI,CAACP,KAAK,EAAE,OAAO,EAAE;IACrB,MAAMY,YAAY,GAAG,IAAI,CAACvB,SAAS,CAACwB,WAAW,CAACb,KAAK,CAAC;IACtD,OAAOY,YAAY,CAAC,aAAa,CAAC,IAAIA,YAAY,CAAC,MAAM,CAAC;EAC5D;;;uBArDW1B,WAAW,EAAAgC,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,gBAAA,GAAAL,EAAA,CAAAC,QAAA,CAAAK,EAAA,CAAAC,MAAA;IAAA;EAAA;;;aAAXvC,WAAW;MAAAwC,OAAA,EAAXxC,WAAW,CAAAyC,IAAA;MAAAC,UAAA,EAFV;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}