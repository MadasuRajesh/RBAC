{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/core/auth.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nfunction RegisterComponent_option_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 17);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const role_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", role_r1);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(role_r1);\n  }\n}\nfunction RegisterComponent_div_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 18);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r1.error);\n  }\n}\nexport let RegisterComponent = /*#__PURE__*/(() => {\n  class RegisterComponent {\n    constructor(fb, authService, router) {\n      this.fb = fb;\n      this.authService = authService;\n      this.router = router;\n      this.error = null;\n      this.roles = ['Editor', 'Viewer'];\n      this.registerForm = this.fb.group({\n        username: ['', Validators.required],\n        email: ['', [Validators.required, Validators.email]],\n        password: ['', Validators.required],\n        role: ['', Validators.required]\n      });\n    }\n    onSubmit() {\n      if (this.registerForm.invalid) return;\n      const user = this.registerForm.value;\n      this.authService.register(user).subscribe({\n        next: () => this.router.navigate(['/auth/login']),\n        error: err => {\n          this.error = err.error || 'Registration failed.';\n        }\n      });\n    }\n    static {\n      this.ɵfac = function RegisterComponent_Factory(t) {\n        return new (t || RegisterComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.Router));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: RegisterComponent,\n        selectors: [[\"app-register\"]],\n        decls: 30,\n        vars: 4,\n        consts: [[1, \"login-wrapper\"], [1, \"login-form\", 3, \"ngSubmit\", \"formGroup\"], [1, \"form-group\"], [\"for\", \"username\"], [\"id\", \"username\", \"formControlName\", \"username\", \"type\", \"text\", \"placeholder\", \"Enter username\"], [\"for\", \"email\"], [\"id\", \"email\", \"formControlName\", \"email\", \"type\", \"email\", \"placeholder\", \"Enter email\"], [\"for\", \"password\"], [\"id\", \"password\", \"formControlName\", \"password\", \"type\", \"password\", \"placeholder\", \"Enter password\"], [\"for\", \"role\"], [\"id\", \"role\", \"formControlName\", \"role\"], [\"value\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"submit\", 3, \"disabled\"], [\"class\", \"error\", 4, \"ngIf\"], [1, \"register-link\"], [\"routerLink\", \"/auth/login\"], [3, \"value\"], [1, \"error\"]],\n        template: function RegisterComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1);\n            i0.ɵɵlistener(\"ngSubmit\", function RegisterComponent_Template_form_ngSubmit_1_listener() {\n              return ctx.onSubmit();\n            });\n            i0.ɵɵelementStart(2, \"h2\");\n            i0.ɵɵtext(3, \"Register New User\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(4, \"div\", 2)(5, \"label\", 3);\n            i0.ɵɵtext(6, \"Username\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(7, \"input\", 4);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(8, \"div\", 2)(9, \"label\", 5);\n            i0.ɵɵtext(10, \"Email\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(11, \"input\", 6);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(12, \"div\", 2)(13, \"label\", 7);\n            i0.ɵɵtext(14, \"Password\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(15, \"input\", 8);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(16, \"div\", 2)(17, \"label\", 9);\n            i0.ɵɵtext(18, \"Role\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(19, \"select\", 10)(20, \"option\", 11);\n            i0.ɵɵtext(21, \"Select Role\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(22, RegisterComponent_option_22_Template, 2, 2, \"option\", 12);\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(23, \"button\", 13);\n            i0.ɵɵtext(24, \"Register\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(25, RegisterComponent_div_25_Template, 2, 1, \"div\", 14);\n            i0.ɵɵelementStart(26, \"p\", 15);\n            i0.ɵɵtext(27, \" Already have an account? \");\n            i0.ɵɵelementStart(28, \"a\", 16);\n            i0.ɵɵtext(29, \"Login\");\n            i0.ɵɵelementEnd()()()();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"formGroup\", ctx.registerForm);\n            i0.ɵɵadvance(21);\n            i0.ɵɵproperty(\"ngForOf\", ctx.roles);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"disabled\", ctx.registerForm.invalid);\n            i0.ɵɵadvance(2);\n            i0.ɵɵproperty(\"ngIf\", ctx.error);\n          }\n        },\n        dependencies: [i4.NgForOf, i4.NgIf, i3.RouterLink, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n        styles: [\".login-wrapper[_ngcontent-%COMP%]{display:flex;justify-content:center;align-items:center;height:80vh;background-color:#f0f4f8}.login-form[_ngcontent-%COMP%]{background-color:#fff;padding:2rem 2.5rem;border-radius:12px;box-shadow:0 2px 12px #0003;width:100%;max-width:400px}.login-form[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%]{margin-bottom:1.5rem;color:#002b5c;text-align:center}.login-form[_ngcontent-%COMP%]   .form-group[_ngcontent-%COMP%]{margin-bottom:1rem}.login-form[_ngcontent-%COMP%]   .form-group[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]{font-weight:600;color:#002b5c;display:block;margin-bottom:.3rem}.login-form[_ngcontent-%COMP%]   .form-group[_ngcontent-%COMP%]   input[_ngcontent-%COMP%], .login-form[_ngcontent-%COMP%]   .form-group[_ngcontent-%COMP%]   select[_ngcontent-%COMP%]{width:100%;padding:.5rem;border:1px solid #ccc;border-radius:6px;font-size:1rem}.login-form[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{width:100%;padding:.6rem;background-color:#002b5c;color:#fff;border:none;border-radius:6px;font-weight:600;cursor:pointer;margin-top:1rem}.login-form[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover{background-color:#004080}.login-form[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:disabled{background-color:#8aa0c8;cursor:not-allowed}.login-form[_ngcontent-%COMP%]   .error[_ngcontent-%COMP%]{color:red;margin-top:.75rem;text-align:center}.login-form[_ngcontent-%COMP%]   .register-link[_ngcontent-%COMP%]{text-align:center;margin-top:1rem}.login-form[_ngcontent-%COMP%]   .register-link[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]{color:#002b5c;text-decoration:underline}\"]\n      });\n    }\n  }\n  return RegisterComponent;\n})();","map":{"version":3,"names":["Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","role_r1","ɵɵadvance","ɵɵtextInterpolate","ctx_r1","error","RegisterComponent","constructor","fb","authService","router","roles","registerForm","group","username","required","email","password","role","onSubmit","invalid","user","value","register","subscribe","next","navigate","err","ɵɵdirectiveInject","i1","FormBuilder","i2","AuthService","i3","Router","selectors","decls","vars","consts","template","RegisterComponent_Template","rf","ctx","ɵɵlistener","RegisterComponent_Template_form_ngSubmit_1_listener","ɵɵelement","ɵɵtemplate","RegisterComponent_option_22_Template","RegisterComponent_div_25_Template"],"sources":["D:\\my projects\\RBAC\\rbac-client\\src\\app\\auth\\register\\register.component.ts","D:\\my projects\\RBAC\\rbac-client\\src\\app\\auth\\register\\register.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AuthService } from 'src/app/core/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent {\n  registerForm: FormGroup;\n  error: string | null = null;\n\n  roles = ['Editor', 'Viewer'];\n\n  constructor(\n    private fb: FormBuilder,\n    private authService: AuthService,\n    private router: Router\n  ) {\n    this.registerForm = this.fb.group({\n      username: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required],\n      role: ['', Validators.required]\n    });\n  }\n\n  onSubmit(): void {\n    if (this.registerForm.invalid) return;\n\n    const user = this.registerForm.value;\n    this.authService.register(user).subscribe({\n      next: () => this.router.navigate(['/auth/login']),\n      error: err => {\n        this.error = err.error || 'Registration failed.';\n      }\n    });\n  }\n}\n","<div class=\"login-wrapper\">\n    <form [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\" class=\"login-form\">\n      <h2>Register New User</h2>\n  \n      <div class=\"form-group\">\n        <label for=\"username\">Username</label>\n        <input id=\"username\" formControlName=\"username\" type=\"text\" placeholder=\"Enter username\" />\n      </div>\n  \n      <div class=\"form-group\">\n        <label for=\"email\">Email</label>\n        <input id=\"email\" formControlName=\"email\" type=\"email\" placeholder=\"Enter email\" />\n      </div>\n  \n      <div class=\"form-group\">\n        <label for=\"password\">Password</label>\n        <input id=\"password\" formControlName=\"password\" type=\"password\" placeholder=\"Enter password\" />\n      </div>\n  \n      <div class=\"form-group\">\n        <label for=\"role\">Role</label>\n        <select id=\"role\" formControlName=\"role\">\n          <option value=\"\">Select Role</option>\n          <option *ngFor=\"let role of roles\" [value]=\"role\">{{ role }}</option>\n        </select>\n      </div>\n  \n      <button type=\"submit\" [disabled]=\"registerForm.invalid\">Register</button>\n  \n      <div class=\"error\" *ngIf=\"error\">{{ error }}</div>\n  \n      <p class=\"register-link\">\n        Already have an account? <a routerLink=\"/auth/login\">Login</a>\n      </p>\n    </form>\n  </div>\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}