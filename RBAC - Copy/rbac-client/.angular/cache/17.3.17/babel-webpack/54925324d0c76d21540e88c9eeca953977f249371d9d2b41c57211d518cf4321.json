{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"src/app/shared/services/content.service\";\nimport * as i4 from \"@angular/common\";\nfunction ContentFormComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Title is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ContentFormComponent_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Description is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ContentFormComponent_div_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.error, \" \");\n  }\n}\nexport class ContentFormComponent {\n  constructor(fb, route, router, contentService) {\n    this.fb = fb;\n    this.route = route;\n    this.router = router;\n    this.contentService = contentService;\n    this.isEditMode = false;\n    this.contentId = null;\n    this.loading = false;\n    this.error = null;\n    this.contentForm = this.fb.group({\n      title: ['', Validators.required],\n      body: ['', Validators.required]\n    });\n  }\n  ngOnInit() {\n    this.contentId = this.route.snapshot.paramMap.get('id');\n    this.isEditMode = !!this.contentId;\n    if (this.isEditMode && this.contentId) {\n      this.loading = true;\n      this.contentService.getById(this.contentId).subscribe({\n        next: data => {\n          this.contentForm.patchValue(data);\n          this.loading = false;\n        },\n        error: () => {\n          this.error = 'Failed to load content';\n          this.loading = false;\n        }\n      });\n    }\n  }\n  onSubmit() {\n    if (this.contentForm.invalid) return;\n    const content = this.contentForm.value;\n    if (this.isEditMode && this.contentId) {\n      this.contentService.update(this.contentId, content).subscribe({\n        next: () => this.router.navigate(['/content']),\n        error: () => this.error = 'Update failed'\n      });\n    } else {\n      this.contentService.create(content).subscribe({\n        next: () => this.router.navigate(['/content']),\n        error: () => this.error = 'Creation failed'\n      });\n    }\n  }\n  onCancel() {\n    this.router.navigate(['/content']);\n  }\n  static {\n    this.ɵfac = function ContentFormComponent_Factory(t) {\n      return new (t || ContentFormComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.ContentService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: ContentFormComponent,\n      selectors: [[\"app-content-form\"]],\n      decls: 22,\n      vars: 7,\n      consts: [[1, \"content-form-container\"], [3, \"ngSubmit\", \"formGroup\"], [\"for\", \"title\"], [\"id\", \"title\", \"type\", \"text\", \"formControlName\", \"title\"], [4, \"ngIf\"], [\"for\", \"body\"], [\"id\", \"body\", \"rows\", \"4\", \"formControlName\", \"body\"], [1, \"form-actions\"], [\"type\", \"submit\", 3, \"disabled\"], [\"type\", \"button\", 3, \"click\"], [\"class\", \"error\", 4, \"ngIf\"], [1, \"error\"]],\n      template: function ContentFormComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"p\");\n          i0.ɵɵtext(1, \"content-form works!\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(2, \"div\", 0)(3, \"h2\");\n          i0.ɵɵtext(4);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(5, \"form\", 1);\n          i0.ɵɵlistener(\"ngSubmit\", function ContentFormComponent_Template_form_ngSubmit_5_listener() {\n            return ctx.onSubmit();\n          });\n          i0.ɵɵelementStart(6, \"div\")(7, \"label\", 2);\n          i0.ɵɵtext(8, \"Title:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(9, \"input\", 3);\n          i0.ɵɵtemplate(10, ContentFormComponent_div_10_Template, 2, 0, \"div\", 4);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(11, \"div\")(12, \"label\", 5);\n          i0.ɵɵtext(13, \"Description:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(14, \"textarea\", 6);\n          i0.ɵɵtemplate(15, ContentFormComponent_div_15_Template, 2, 0, \"div\", 4);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(16, \"div\", 7)(17, \"button\", 8);\n          i0.ɵɵtext(18);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(19, \"button\", 9);\n          i0.ɵɵlistener(\"click\", function ContentFormComponent_Template_button_click_19_listener() {\n            return ctx.onCancel();\n          });\n          i0.ɵɵtext(20, \"Cancel\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵtemplate(21, ContentFormComponent_div_21_Template, 2, 1, \"div\", 10);\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          let tmp_2_0;\n          let tmp_3_0;\n          i0.ɵɵadvance(4);\n          i0.ɵɵtextInterpolate(ctx.isEditMode ? \"Edit Content\" : \"Add New Content\");\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"formGroup\", ctx.contentForm);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngIf\", ((tmp_2_0 = ctx.contentForm.get(\"title\")) == null ? null : tmp_2_0.invalid) && ((tmp_2_0 = ctx.contentForm.get(\"title\")) == null ? null : tmp_2_0.touched));\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngIf\", ((tmp_3_0 = ctx.contentForm.get(\"body\")) == null ? null : tmp_3_0.invalid) && ((tmp_3_0 = ctx.contentForm.get(\"body\")) == null ? null : tmp_3_0.touched));\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"disabled\", ctx.contentForm.invalid);\n          i0.ɵɵadvance();\n          i0.ɵɵtextInterpolate1(\" \", ctx.isEditMode ? \"Update\" : \"Create\", \" \");\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngIf\", ctx.error);\n        }\n      },\n      dependencies: [i4.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n      styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","ctx_r0","error","ContentFormComponent","constructor","fb","route","router","contentService","isEditMode","contentId","loading","contentForm","group","title","required","body","ngOnInit","snapshot","paramMap","get","getById","subscribe","next","data","patchValue","onSubmit","invalid","content","value","update","navigate","create","onCancel","ɵɵdirectiveInject","i1","FormBuilder","i2","ActivatedRoute","Router","i3","ContentService","selectors","decls","vars","consts","template","ContentFormComponent_Template","rf","ctx","ɵɵlistener","ContentFormComponent_Template_form_ngSubmit_5_listener","ɵɵelement","ɵɵtemplate","ContentFormComponent_div_10_Template","ContentFormComponent_div_15_Template","ContentFormComponent_Template_button_click_19_listener","ContentFormComponent_div_21_Template","ɵɵtextInterpolate","ɵɵproperty","tmp_2_0","touched","tmp_3_0"],"sources":["D:\\my projects\\RBAC\\rbac-client\\src\\app\\content\\content-form\\content-form.component.ts","D:\\my projects\\RBAC\\rbac-client\\src\\app\\content\\content-form\\content-form.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Content } from 'src/app/shared/models/content.model';\nimport { ContentService } from 'src/app/shared/services/content.service';\n\n@Component({\n  selector: 'app-content-form',\n  templateUrl: './content-form.component.html',\n  styleUrls: ['./content-form.component.scss']\n})\nexport class ContentFormComponent implements OnInit {\n  contentForm: FormGroup;\n  isEditMode = false;\n  contentId: string | null = null;\n  loading = false;\n  error: string | null = null;\n\n  constructor(\n    private fb: FormBuilder,\n    private route: ActivatedRoute,\n    private router: Router,\n    private contentService: ContentService\n  ) {\n    this.contentForm = this.fb.group({\n      title: ['', Validators.required],\n      body: ['', Validators.required]\n    });\n  }\n\n  ngOnInit(): void {\n    this.contentId = this.route.snapshot.paramMap.get('id');\n    this.isEditMode = !!this.contentId;\n\n    if (this.isEditMode && this.contentId) {\n      this.loading = true;\n      this.contentService.getById(this.contentId).subscribe({\n        next: (data) => {\n          this.contentForm.patchValue(data);\n          this.loading = false;\n        },\n        error: () => {\n          this.error = 'Failed to load content';\n          this.loading = false;\n        }\n      });\n    }\n  }\n\n  onSubmit(): void {\n    if (this.contentForm.invalid) return;\n\n    const content: Content = this.contentForm.value;\n\n    if (this.isEditMode && this.contentId) {\n      this.contentService.update(this.contentId, content).subscribe({\n        next: () => this.router.navigate(['/content']),\n        error: () => this.error = 'Update failed'\n      });\n    } else {\n      this.contentService.create(content).subscribe({\n        next: () => this.router.navigate(['/content']),\n        error: () => this.error = 'Creation failed'\n      });\n    }\n  }\n\n  onCancel(): void {\n    this.router.navigate(['/content']);\n  }\n}\n","<p>content-form works!</p>\n<div class=\"content-form-container\">\n    <h2>{{ isEditMode ? 'Edit Content' : 'Add New Content' }}</h2>\n  \n    <form [formGroup]=\"contentForm\" (ngSubmit)=\"onSubmit()\">\n      <div>\n        <label for=\"title\">Title:</label>\n        <input id=\"title\" type=\"text\" formControlName=\"title\" />\n        <div *ngIf=\"contentForm.get('title')?.invalid && contentForm.get('title')?.touched\">\n          Title is required\n        </div>\n      </div>\n  \n      <div>\n        <label for=\"body\">Description:</label>\n        <textarea id=\"body\" rows=\"4\" formControlName=\"body\"></textarea>\n        <div *ngIf=\"contentForm.get('body')?.invalid && contentForm.get('body')?.touched\">\n          Description is required\n        </div>\n      </div>\n  \n      <div class=\"form-actions\">\n        <button type=\"submit\" [disabled]=\"contentForm.invalid\">\n          {{ isEditMode ? 'Update' : 'Create' }}\n        </button>\n        <button type=\"button\" (click)=\"onCancel()\">Cancel</button>\n      </div>\n  \n      <div *ngIf=\"error\" class=\"error\">\n        {{ error }}\n      </div>\n    </form>\n  </div>\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}