{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './auth/login/login.component';\nimport { JwtModule } from '@auth0/angular-jwt';\nimport { JwtInterceptor } from './core/jwt-interceptor';\nimport { AuthModule } from './auth/auth.module';\nimport { UsersModule } from './users/users.module';\nimport { ContentModule } from './content/content.module';\nimport { CoreModule } from './core/core.module';\nimport { SharedModule } from './shared/shared.module';\nimport { LayoutModule } from './layout/layout.module';\nimport { ReactiveFormsModule } from '@angular/forms';\n// âœ… Define this function outside @NgModule\nexport function tokenGetter() {\n  return localStorage.getItem('access_token');\n}\nlet AppModule = class AppModule {};\nAppModule = __decorate([NgModule({\n  declarations: [AppComponent, LoginComponent],\n  imports: [BrowserModule, HttpClientModule, AppRoutingModule, AuthModule, ReactiveFormsModule, UsersModule, ContentModule, CoreModule, SharedModule, LayoutModule, JwtModule.forRoot({\n    config: {\n      tokenGetter: tokenGetter,\n      allowedDomains: ['localhost:5001'],\n      disallowedRoutes: ['localhost:5001/api/auth/login']\n    }\n  })],\n  providers: [{\n    provide: HTTP_INTERCEPTORS,\n    useClass: JwtInterceptor,\n    multi: true\n  }],\n  bootstrap: [AppComponent]\n})], AppModule);\nexport { AppModule };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}