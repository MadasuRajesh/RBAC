{"ast":null,"code":"import { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ContentService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = `${environment.apiUrl}/api/content`;\n  }\n  getAll() {\n    return this.http.get(this.apiUrl);\n  }\n  static {\n    this.ɵfac = function ContentService_Factory(t) {\n      return new (t || ContentService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: ContentService,\n      factory: ContentService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["environment","ContentService","constructor","http","apiUrl","getAll","get","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["D:\\my projects\\RBAC\\rbac-client\\src\\app\\shared\\services\\content.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Content } from '../shared/models/content.model';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ContentService {\r\n  private apiUrl = `${environment.apiUrl}/api/content`;\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getAll(): Observable<Content[]> {\r\n    return this.http.get<Content[]>(this.apiUrl);\r\n  }\r\n}\r\n"],"mappings":"AAIA,SAASA,WAAW,QAAQ,8BAA8B;;;AAK1D,OAAM,MAAOC,cAAc;EAGzBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,GAAGJ,WAAW,CAACI,MAAM,cAAc;EAEb;EAEvCC,MAAMA,CAAA;IACJ,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAY,IAAI,CAACF,MAAM,CAAC;EAC9C;;;uBAPWH,cAAc,EAAAM,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAdT,cAAc;MAAAU,OAAA,EAAdV,cAAc,CAAAW,IAAA;MAAAC,UAAA,EAFb;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}