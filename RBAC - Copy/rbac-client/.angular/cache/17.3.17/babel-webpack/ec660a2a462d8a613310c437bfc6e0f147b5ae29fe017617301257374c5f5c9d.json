{"ast":null,"code":"import { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UserService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = `${environment.apiUrl}/api/user`;\n  }\n  getAllUsers() {\n    return this.http.get(this.apiUrl);\n  }\n  getUserById(id) {\n    return this.http.get(`${this.apiUrl}/${id}`);\n  }\n  createUser(user) {\n    return this.http.post(this.apiUrl, user);\n  }\n  updateUser(id, user) {\n    return this.http.put(`${this.apiUrl}/${id}`, user);\n  }\n  static {\n    this.ɵfac = function UserService_Factory(t) {\n      return new (t || UserService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: UserService,\n      factory: UserService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["environment","UserService","constructor","http","apiUrl","getAllUsers","get","getUserById","id","createUser","user","post","updateUser","put","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["D:\\my projects\\RBAC\\rbac-client\\src\\app\\users\\user.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Observable } from 'rxjs';\r\nimport { User } from '../shared/models/user.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n  private apiUrl = `${environment.apiUrl}/api/user`;\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getAllUsers(): Observable<User[]> {\r\n    return this.http.get<any[]>(this.apiUrl);\r\n  }\r\n\r\n  getUserById(id: string): Observable<any> {\r\n    return this.http.get<any>(`${this.apiUrl}/${id}`);\r\n  }\r\n  \r\n  createUser(user: any): Observable<any> {\r\n    return this.http.post(this.apiUrl, user);\r\n  }\r\n  \r\n  updateUser(id: string, user: any): Observable<any> {\r\n    return this.http.put(`${this.apiUrl}/${id}`, user);\r\n  }\r\n  \r\n}\r\n"],"mappings":"AAEA,SAASA,WAAW,QAAQ,8BAA8B;;;AAO1D,OAAM,MAAOC,WAAW;EAGtBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,GAAGJ,WAAW,CAACI,MAAM,WAAW;EAEV;EAEvCC,WAAWA,CAAA;IACT,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAQ,IAAI,CAACF,MAAM,CAAC;EAC1C;EAEAG,WAAWA,CAACC,EAAU;IACpB,OAAO,IAAI,CAACL,IAAI,CAACG,GAAG,CAAM,GAAG,IAAI,CAACF,MAAM,IAAII,EAAE,EAAE,CAAC;EACnD;EAEAC,UAAUA,CAACC,IAAS;IAClB,OAAO,IAAI,CAACP,IAAI,CAACQ,IAAI,CAAC,IAAI,CAACP,MAAM,EAAEM,IAAI,CAAC;EAC1C;EAEAE,UAAUA,CAACJ,EAAU,EAAEE,IAAS;IAC9B,OAAO,IAAI,CAACP,IAAI,CAACU,GAAG,CAAC,GAAG,IAAI,CAACT,MAAM,IAAII,EAAE,EAAE,EAAEE,IAAI,CAAC;EACpD;;;uBAnBWT,WAAW,EAAAa,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAXhB,WAAW;MAAAiB,OAAA,EAAXjB,WAAW,CAAAkB,IAAA;MAAAC,UAAA,EAFV;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}