{"ast":null,"code":"import { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ContentService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = `${environment.apiUrl}/api/content`;\n  }\n  getAll() {\n    return this.http.get(this.apiUrl);\n  }\n  getById(id) {\n    return this.http.get(`${this.apiUrl}/${id}`);\n  }\n  create(content) {\n    return this.http.post(this.apiUrl, content);\n  }\n  update(id, content) {\n    return this.http.put(`${this.apiUrl}/${id}`, content);\n  }\n  delete(id) {\n    return this.http.delete(`${this.apiUrl}/${id}`);\n  }\n  static {\n    this.ɵfac = function ContentService_Factory(t) {\n      return new (t || ContentService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: ContentService,\n      factory: ContentService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["environment","ContentService","constructor","http","apiUrl","getAll","get","getById","id","create","content","post","update","put","delete","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["D:\\my projects\\RBAC\\rbac-client\\src\\app\\shared\\services\\content.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Content } from '../models/content.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ContentService {\r\n  private apiUrl = `${environment.apiUrl}/api/content`;\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getAll(): Observable<Content[]> {\r\n    return this.http.get<Content[]>(this.apiUrl);\r\n  }\r\n\r\n  getById(id: string): Observable<Content> {\r\n    return this.http.get<Content>(`${this.apiUrl}/${id}`);\r\n  }\r\n\r\n  create(content: Content): Observable<Content> {\r\n    return this.http.post<Content>(this.apiUrl, content);\r\n  }\r\n\r\n  update(id: string, content: Content): Observable<Content> {\r\n    return this.http.put<Content>(`${this.apiUrl}/${id}`, content);\r\n  }\r\n\r\n  delete(id: string): Observable<void> {\r\n    return this.http.delete<void>(`${this.apiUrl}/${id}`);\r\n  }\r\n}\r\n"],"mappings":"AAGA,SAASA,WAAW,QAAQ,8BAA8B;;;AAM1D,OAAM,MAAOC,cAAc;EAGzBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,GAAGJ,WAAW,CAACI,MAAM,cAAc;EAEb;EAEvCC,MAAMA,CAAA;IACJ,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAY,IAAI,CAACF,MAAM,CAAC;EAC9C;EAEAG,OAAOA,CAACC,EAAU;IAChB,OAAO,IAAI,CAACL,IAAI,CAACG,GAAG,CAAU,GAAG,IAAI,CAACF,MAAM,IAAII,EAAE,EAAE,CAAC;EACvD;EAEAC,MAAMA,CAACC,OAAgB;IACrB,OAAO,IAAI,CAACP,IAAI,CAACQ,IAAI,CAAU,IAAI,CAACP,MAAM,EAAEM,OAAO,CAAC;EACtD;EAEAE,MAAMA,CAACJ,EAAU,EAAEE,OAAgB;IACjC,OAAO,IAAI,CAACP,IAAI,CAACU,GAAG,CAAU,GAAG,IAAI,CAACT,MAAM,IAAII,EAAE,EAAE,EAAEE,OAAO,CAAC;EAChE;EAEAI,MAAMA,CAACN,EAAU;IACf,OAAO,IAAI,CAACL,IAAI,CAACW,MAAM,CAAO,GAAG,IAAI,CAACV,MAAM,IAAII,EAAE,EAAE,CAAC;EACvD;;;uBAvBWP,cAAc,EAAAc,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAdjB,cAAc;MAAAkB,OAAA,EAAdlB,cAAc,CAAAmB,IAAA;MAAAC,UAAA,EAFb;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}