{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Role } from 'src/app/shared/enums';\nlet HeaderComponent = class HeaderComponent {\n  constructor(authService) {\n    this.authService = authService;\n    this.userLoggedIn = false;\n    this.userRole = null;\n  }\n  ngOnInit() {\n    this.userLoggedIn = this.authService.isLoggedIn();\n    this.userRole = this.authService.getUserRoles();\n  }\n  get isAdmin() {\n    return this.userRole === Role.Admin;\n  }\n  get isEditorOrAdminOrViewer() {\n    return [Role.Admin, Role.Editor, Role.Viewer].includes(this.userRole);\n  }\n  logout() {\n    this.authService.logout(); // Clear token, etc.\n  }\n};\nHeaderComponent = __decorate([Component({\n  selector: 'app-header',\n  templateUrl: './app-header.component.html'\n})], HeaderComponent);\nexport { HeaderComponent };","map":{"version":3,"names":["Component","Role","HeaderComponent","constructor","authService","userLoggedIn","userRole","ngOnInit","isLoggedIn","getUserRoles","isAdmin","Admin","isEditorOrAdminOrViewer","Editor","Viewer","includes","logout","__decorate","selector","templateUrl"],"sources":["D:\\my projects\\RBAC\\rbac-client\\src\\app\\layout\\navbar\\header.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/core/auth.service';\nimport { Role } from 'src/app/shared/enums';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './app-header.component.html'\n})\nexport class HeaderComponent implements OnInit {\n  userLoggedIn = false;\n  userRole: Role | null = null;\n\n  constructor(private authService: AuthService) {}\n\n  ngOnInit(): void {\n    this.userLoggedIn = this.authService.isLoggedIn();\n    this.userRole = this.authService.getUserRoles();\n  }\n\n  get isAdmin(): boolean {\n    return this.userRole === Role.Admin;\n  }\n\n  get isEditorOrAdminOrViewer(): boolean {\n    return [Role.Admin, Role.Editor, Role.Viewer].includes(this.userRole as Role);\n  }\n\n  logout() {\n    this.authService.logout(); // Clear token, etc.\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAEjD,SAASC,IAAI,QAAQ,sBAAsB;AAMpC,IAAMC,eAAe,GAArB,MAAMA,eAAe;EAI1BC,YAAoBC,WAAwB;IAAxB,KAAAA,WAAW,GAAXA,WAAW;IAH/B,KAAAC,YAAY,GAAG,KAAK;IACpB,KAAAC,QAAQ,GAAgB,IAAI;EAEmB;EAE/CC,QAAQA,CAAA;IACN,IAAI,CAACF,YAAY,GAAG,IAAI,CAACD,WAAW,CAACI,UAAU,EAAE;IACjD,IAAI,CAACF,QAAQ,GAAG,IAAI,CAACF,WAAW,CAACK,YAAY,EAAE;EACjD;EAEA,IAAIC,OAAOA,CAAA;IACT,OAAO,IAAI,CAACJ,QAAQ,KAAKL,IAAI,CAACU,KAAK;EACrC;EAEA,IAAIC,uBAAuBA,CAAA;IACzB,OAAO,CAACX,IAAI,CAACU,KAAK,EAAEV,IAAI,CAACY,MAAM,EAAEZ,IAAI,CAACa,MAAM,CAAC,CAACC,QAAQ,CAAC,IAAI,CAACT,QAAgB,CAAC;EAC/E;EAEAU,MAAMA,CAAA;IACJ,IAAI,CAACZ,WAAW,CAACY,MAAM,EAAE,CAAC,CAAC;EAC7B;CACD;AAtBYd,eAAe,GAAAe,UAAA,EAJ3BjB,SAAS,CAAC;EACTkB,QAAQ,EAAE,YAAY;EACtBC,WAAW,EAAE;CACd,CAAC,C,EACWjB,eAAe,CAsB3B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}